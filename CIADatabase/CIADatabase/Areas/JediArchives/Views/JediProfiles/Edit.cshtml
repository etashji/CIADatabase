@model CIADatabase.Areas.JediArchives.Models.JediProfile

@{
    ViewBag.Title = "Edit Jedi Profile";
    Layout = "~/Areas/JediArchives/Views/Shared/_Layout.cshtml";
}

<div class="d-flex flex-column align-items-stretch mt-5">
    <div class="text-center">
        <h2 class="text-center mb-4">Edit Profile</h2>
    </div>

    @using (Html.BeginForm("Edit", "JediProfiles", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal w-100" style="max-width: 900px; margin: 0 auto; text-align: center;">
            <h4 class="text-center mb-4">@ViewBag.SectionTitle</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger text-center" })

            <!-- Hidden Field for Profile ID -->
            <input type="hidden" name="ProfileId" value="@Model.ProfileId" />
            <input type="hidden" name="ProfileSectionId" value="@Model.ProfileSectionId" />

            <!-- Profile Picture -->
            <div class="form-group mb-4">
                <label for="ProfilePic" class="form-label">Profile Picture</label>
                @if (Model.ProfilePic != null && Model.ProfilePic.Length > 0)
                {
                    <div class="input-container mb-3">
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.ProfilePic)"
                             alt="Profile Picture"
                             class="img-thumbnail jedi-thumbnail m-2"
                             style="width: 400px; height: 500px; max-height: 500px; border-radius: 10px;" />
                    </div>
                }
                else
                {
                    <p class="text-center text-muted">No profile picture available</p>
                }
                <div class="input-container">
                    <input type="file" name="ProfilePic" class="form-control jedi-input jedi-file-input" />
                </div>
            </div>

            <!-- First Name -->
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label" })
                <div class="input-container">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control jedi-input smaller-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <!-- Last Name -->
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label" })
                <div class="input-container">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control jedi-input smaller-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

            <!-- Alias -->
            <div class="form-group">
                @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "form-label" })
                <div class="input-container">
                    @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control jedi-input smaller-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
            </div>

            <!-- Profile Editor -->
            <div class="form-group mb-4">
                @Html.LabelFor(model => model.Profile, htmlAttributes: new { @class = "form-label" })
                <div id="ProfileEditor" class="jedi-quill-editor" style="height: 600px;"></div>
                <input type="hidden" name="Profile" id="ProfileInput" value="@Html.Raw(HttpUtility.HtmlDecode(Model.Profile))" />
            </div>

            <!-- Submit Button -->
            <div class="form-group text-center mt-4">
                <button type="submit" class="btn jedi-btn w-50">Save Changes</button>
            </div>
        </div>
    }

    <!-- Back to Details Button -->
    <div class="form-group text-center mt-4">
        @Html.ActionLink(
            "Back to Details",
            "Details",
            "JediProfiles",
            new { id = Model.ProfileId },
            new { @class = "btn jedi-btn w-25" }
        )
    </div>
</div>

<script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
<script>
    // Initialize Quill for Profile Description
    var profileEditor = new Quill('#ProfileEditor', {
        theme: 'snow',
        modules: {
            toolbar: [
                ['bold', 'italic', 'underline'],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                ['link'],
                [{ 'align': [] }],
                ['clean']
            ]
        }
    });

    profileEditor.root.innerHTML = document.querySelector('#ProfileInput').value;

    profileEditor.on('text-change', function () {
        document.querySelector('#ProfileInput').value = profileEditor.root.innerHTML;
    });

    // Set custom height for the editor
    document.querySelector('#ProfileEditor .ql-editor').style.height = "500px";
    document.querySelector('#ProfileEditor .ql-editor').style.color = "#00bcd4";
    document.querySelector('#ProfileEditor .ql-editor').style.backgroundColor = "#000";
</script>
